package GupangMSA.userservice.mock.repository;

import GupangMSA.userservice.domain.User;
import GupangMSA.userservice.service.port.UserRepository;

import java.util.*;
import java.util.concurrent.atomic.AtomicLong;

public class FakeUserRepository implements UserRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<User> data = Collections.synchronizedList(new ArrayList<>());

    @Override
    public Optional<User> findById(Long id) {
        return data.stream().filter(item -> Objects.equals(item.getId(), id)).findAny();
    }

    @Override
    public User save(User user) {
        if (user.getId() == null || user.getId() == 0) {
            User newUser = User.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(user.getName())
                    .email(user.getEmail())
                    .password(user.getPassword())
                    .city(user.getCity())
                    .street(user.getStreet())
                    .postNumber(user.getPostNumber())
                    .phoneNumber(user.getPhoneNumber())
                    .userUuid(user.getUserUuid())
                    .cardNumber(user.getCardNumber())
                    .joinedAt(user.getJoinedAt())
                    .lastLoginAt(user.getLastLoginAt())
                    .build();
            data.add(newUser);
            return newUser;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), user.getId()));
            data.add(user);
            return user;
        }

    }
}
